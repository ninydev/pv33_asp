using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace WebApplication1.Models;

[Index(nameof(Slug), IsUnique = true)]
public class TagModel
{
    [Key]
    public int Id { get; set; }

    [Required]
    [MaxLength(100)]
    [Display(Name = "Name", Description = "Human readable tag name")]
    public string Name { get; set; }

    [Required]
    [MaxLength(100)]
    [Display(Name = "Slug", Description = "URL friendly identifier; lowercase, digits and hyphens")]
    [RegularExpression(@"^[a-z0-9\-]+$", ErrorMessage = "Slug must contain only lowercase letters, digits and hyphens")]
    public string Slug { get; set; }

    [DataType(DataType.DateTime)]
    [Display(Name = "Created at", Description = "Timestamp when the record was created (generated by the database)")]
    [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
    public DateTime CreatedAt { get; set; }

    [DataType(DataType.DateTime)]
    [Display(Name = "Updated at", Description = "Timestamp of last update (computed by the database)")]
    [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
    public DateTime? UpdatedAt { get; set; }
    
    public TagModel()
    {
        // fallback for objects created in memory (DbContext will set authoritative values on save)
        CreatedAt = DateTime.UtcNow;
    }
}